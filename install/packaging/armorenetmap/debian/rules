#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)

#DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
#DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
#ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
#CROSS= --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
#else
#CROSS= --build $(DEB_BUILD_GNU_TYPE)
#endif


# some default definitions, important!
#
# Name of the source package
psource:=armorenetmap

# The short upstream name, used for the module source directory
sname:=armorenetmap

### KERNEL SETUP
### Setup the stuff needed for making kernel module packages
### taken from /usr/share/kernel-package/sample.module.rules

# prefix of the target package name
PACKAGE=armorenetmap-modules
# modifieable for experiments or debugging m-a
MA_DIR ?= /usr/share/modass
# load generic variable handling
-include $(MA_DIR)/include/generic.make
# load default rules, including kdist, kdist_image, ...
-include $(MA_DIR)/include/common-rules.make



# module assistant calculates all needed things for us and sets
# following variables:
# KSRC (kernel source directory), KVERS (kernel version string), KDREV
# (revision of the Debian kernel-image package), CC (the correct
# compiler), VERSION (the final package version string), PKGNAME (full
# package name with KVERS included), DEB_DESTDIR (path to store DEBs)

# The kdist_config target is called by make-kpkg modules_config and
# by kdist* rules by dependency. It should configure the module so it is
# ready for compilation (mostly useful for calling configure).
# prep-deb-files from module-assistant creates the neccessary debian/ files
kdist_config: prep-deb-files

# the kdist_clean target is called by make-kpkg modules_clean and from
# kdist* rules. It is responsible for cleaning up any changes that have
# been made by the other kdist_commands (except for the .deb files created)
kdist_clean: clean
	dh_testdir
	dh_clean
	$(MAKE) $(MFLAGS) clean
#	rm -f driver/*.o driver/*.ko
#
### end  KERNEL SETUP

config.status: configure
	dh_testdir
	#./configure --kernel-dir=/usr/src/linux-headers-3.12.0-armore --kernel-sources=/usr/src/linux-source-3.12.0-armore/
	./configure --kernel-dir=/usr/src/linux-headers-3.12.0-armore --kernel-sources=/usr/src/linux-source-3.12.0-armore/ --enable-vale --enable-pipe


build-arch:  config.status build-arch-stamp
build-arch-stamp: 
	dh_testdir

	#Begin Compiling the KernelModules
	$(MAKE)
	#Begin Compiling the Utilities we omit this in fictner since makefile is modified
	#$(MAKE) apps

	touch $@

#k = $(shell echo $(KVERS) | grep -q ^2.6 && echo k)

# the binary-modules rule is invoked by module-assistant while processing the
# kdist* targets. It is called by module-assistant or make-kpkg and *not*
# during a normal build
binary-modules:
	dh_testroot
	dh_prep
	dh_installdirs lib/modules/$(KVERS)/misc

	# Build the module
	$(MAKE) -C drivers KERNEL_DIR=$(KSRC) KVERS=$(KVERS)

	# Install the module
	cp drivers/slusb.$ko drivers/slamr.$ko debian/$(PKGNAME)/lib/modules/$(KVERS)/misc

	dh_installdocs
	dh_installchangelogs
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol -- -v$(VERSION)
	dh_md5sums
	dh_builddeb --destdir=$(DEB_DESTDIR)
	dh_prep

build-indep: config.status  build-indep-stamp
build-indep-stamp: 
	dh_testdir

	# Add here command to compile/build the arch indep package.
	# It's ok not to do anything here, if you don't need to build
	#  anything for this package.
	#docbook-to-man debian/armorenetmap.sgml > armorenetmap.1

	touch $@

build: build-arch build-indep

clean: 
	dh_testdir
	#dh_testroot
	rm -f build-arch-stamp build-indep-stamp 

	# Add here commands to clean up after the build process.
	#[ ! -f Makefile ] || $(MAKE) distclean
	$(MAKE) clean
	rm -f config.sub config.guess

	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

   # Create the directories to install the source into
#	dh_installdirs -p$(psource)  usr/src/modules/$(sname)/debian
#
#  # Copy only the driver source to the proper location
#	cp -s driver/*  debian/$(psource)/usr/src/modules/$(sname)
#  # Copy the needed debian/ pieces to the proper location
#	cp debian/*modules.in* \
#  	debian/$(psource)/usr/src/modules/$(sname)/debian
#	cp debian/*_KVERS_* debian/rules debian/changelog debian/copyright \
#  	debian/compat debian/$(psource)/usr/src/modules/$(sname)/debian/
#	cd debian/$(psource)/usr/src && tar c modules | bzip2 -9 > $(sname).tar.bz2 && rm -rf modules
#
#  # Add here commands to install the package into debian/armorenetmap.
#	$(MAKE) prefix=$(CURDIR)/debian/armorenetmap/usr install
#
#	dh_install
#


#	dh_installdirs -p$(psource)  lib/modules/3.12.0-armore/kernel/net/$(sname)
#	cp igb/*.ko debian/$(psource)/lib/modules/3.12.0-armore/kernel/net/$(sname)
#	cp ixgbe/*.ko debian/$(psource)/lib/modules/3.12.0-armore/kernel/net/$(sname)
#	cp e1000/*.ko debian/$(psource)/lib/modules/3.12.0-armore/kernel/net/$(sname)
#	cp e1000e/*.ko debian/$(psource)/lib/modules/3.12.0-armore/kernel/net/$(sname)
#	cp *.ko debian/$(psource)/lib/modules/3.12.0-armore/kernel/net/$(sname)
	
	
#	dh_installdirs -p$(psource)  usr/bin/$(sname)
#	cp build\-apps/* debian/$(psource)/usr/bin/$(sname)


	dh_install



# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs  -i
	dh_installdocs -i
	dh_installexamples -i
#	dh_install -i
#	dh_installmenu -i
#	dh_installdebconf -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installinfo -i
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
#	dh_makeshlibs -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -s
	dh_testroot -s
#	dh_installdebconf -s
	dh_installdocs -s
	dh_installexamples -s
	dh_installmenu -s
#	dh_installlogrotate -s
#	dh_installemacsen -s
#	dh_installpam -s
#	dh_installmime -s
#	dh_installinit -s
	dh_installcron -s
#	dh_installman -s
	dh_installinfo -s
	dh_installchangelogs  -s
	dh_strip -s
	dh_link -s
	dh_compress -s
	dh_fixperms -s
#	dh_makeshlibs -s
	dh_installdeb -s
#	dh_perl -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install  binary-modules kdist kdist_configure kdist_image kdist_clean
